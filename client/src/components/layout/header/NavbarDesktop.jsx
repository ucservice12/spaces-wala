import React, { useState, useEffect, useRef } from "react";
import { Link, useLocation } from "react-router-dom";
import {
Â  Â  TypographyH4,
Â  Â  TypographyMuted,
Â  Â  TypographySmall,
} from "@/custom/Typography";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import profileImage from "@/assets/navbar/profileimage.webp";
import { menuItems } from "@/data/Navlinks";
import {
Â  Â  ChevronDown, Menu, Heart, FileText,
} from "lucide-react";
import { FadeInWhenVisible } from "@/custom/FadeInWhenVisible";
import { motion, AnimatePresence } from "framer-motion";
import { useSelector } from "react-redux";
import UserSidebar from "@/custom/UserSidebar";
import { ModeToggle } from '@/components/mode-toggle';

const NavbarDesktop = () => {
Â  Â  const [hoveredIndex, setHoveredIndex] = useState(null);
Â  Â  const [scrolled, setScrolled] = useState(false);
Â  Â  const [isSidebarOpen, setIsSidebarOpen] = useState(false);
Â  Â  const [isPackagesDropdownOpen, setIsPackagesDropdownOpen] = useState(false);
Â  Â  const ref = useRef();
Â  Â  const location = useLocation();
Â  Â  const { user } = useSelector((state) => state.auth);
Â  Â  const isHomePage = location.pathname === "/";

Â  Â  const packagesDropdownRef = useRef(null);

Â  Â  const chunkArray = (arr, size) => {
Â  Â  Â  Â  const result = [];
Â  Â  Â  Â  for (let i = 0; i < arr.length; i += size) {
Â  Â  Â  Â  Â  Â  result.push(arr.slice(i, i + size));
Â  Â  Â  Â  }
Â  Â  Â  Â  return result;
Â  Â  };

Â  Â  useEffect(() => {
Â  Â  Â  Â  const handleScroll = () => {
Â  Â  Â  Â  Â  Â  setScrolled(window.scrollY > 40);
Â  Â  Â  Â  };
Â  Â  Â  Â  window.addEventListener("scroll", handleScroll);
Â  Â  Â  Â  return () => window.removeEventListener("scroll", handleScroll);
Â  Â  }, []);

Â  Â  useEffect(() => {
Â  Â  Â  Â  const handleClickOutside = (event) => {
Â  Â  Â  Â  Â  Â  if (packagesDropdownRef.current && !packagesDropdownRef.current.contains(event.target)) {
Â  Â  Â  Â  Â  Â  Â  Â  setIsPackagesDropdownOpen(false);
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  };
Â  Â  Â  Â  document.addEventListener("mousedown", handleClickOutside);
Â  Â  Â  Â  return () => {
Â  Â  Â  Â  Â  Â  document.removeEventListener("mousedown", handleClickOutside);
Â  Â  Â  Â  };
Â  Â  }, []);

Â  Â  const toggleSidebar = () => {
Â  Â  Â  Â  setIsSidebarOpen(!isSidebarOpen);
Â  Â  };

Â  Â  const togglePackagesDropdown = () => {
Â  Â  Â  Â  setIsPackagesDropdownOpen(!isPackagesDropdownOpen);
Â  Â  };

Â  Â  const packagesDropdownVariants = {
Â  Â  Â  Â  hidden: { opacity: 0, y: -10, transition: { duration: 0.2 } },
Â  Â  Â  Â  visible: { opacity: 1, y: 0, transition: { duration: 0.2 } },
Â  Â  };

Â  Â  return (
Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  Â  Â  Â  ref={ref}
Â  Â  Â  Â  Â  Â  Â  Â  className={`w-full fixed top-0 z-40 h-26 transition-colors duration-300 ${isHomePage && !scrolled ? "bg-transparent" : "bg-white/10 backdrop-blur-lg shadow-md"}`}
Â  Â  Â  Â  Â  Â  Â  Â  initial={{ y: -100 }}
Â  Â  Â  Â  Â  Â  Â  Â  animate={{ y: 0 }}
Â  Â  Â  Â  Â  Â  Â  Â  transition={{ type: "spring", stiffness: 200, damping: 20 }}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  <div className="px-4 sm:px-6 flex justify-between mx-5 items-center h-26">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Logo */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <motion.img
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  src="/logo.png"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  alt="logo"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="sm:h-24 h-20"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  whileHover={{ scale: 1.05 }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  whileTap={{ scale: 0.95 }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Link>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Right Nav Items */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center gap-4 text-white text-sm">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/payrent">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  variant="ghost"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="bg-white/10 hover:bg-white/40 px-5 rounded-xl backdrop-blur-lg transition text-white"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Pay Rent
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Link>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center gap-1 cursor-pointer hover:text-white/80">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Heart className="w-4 h-4" />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/dashboard/saved"><span className="text-sm">Saved</span></Link>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="relative" ref={packagesDropdownRef}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={togglePackagesDropdown}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="flex items-center gap-1 cursor-pointer hover:text-white/80"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <FileText className="w-4 h-4" />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-sm">Packages</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <ChevronDown className={`w-4 h-4 transition-transform ${isPackagesDropdownOpen ? 'rotate-180' : ''}`} />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <AnimatePresence>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {isPackagesDropdownOpen && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  initial="hidden"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  animate="visible"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  exit="hidden"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  variants={packagesDropdownVariants}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="py-1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  to="/packages/Developers"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setIsPackagesDropdownOpen(false)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  For Developers
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  to="/packages/brokers"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setIsPackagesDropdownOpen(false)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  For Brokers
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </motion.div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </AnimatePresence>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center gap-1.5 cursor-pointer hover:text-white/80">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-sm">Post Property</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Badge className="bg-pink-500 text-white text-[10px] px-2">FREE</Badge>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* ðŸ‘‡ ADD DARK/LIGHT TOGGLE BUTTON HERE */}
{/* Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <ModeToggle /> */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Sidebar Avatar */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={toggleSidebar}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="p-1 px-1 cursor-pointer rounded-l-2xl rounded-r-2xl gap-1 bg-white flex justify-center items-center"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Menu strokeWidth={1.5} className="w-5 h-5 text-black" />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <img
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  src={profileImage}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  alt="Profile"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="w-5 h-5 rounded-full object-cover"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  {/* Dropdown Panel - (existing code for other dropdowns, if any) */}
Â  Â  Â  Â  Â  Â  Â  Â  <AnimatePresence>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {hoveredIndex !== null && menuItems[hoveredIndex].links && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="absolute left-0 top-100 w-full bg-card/95 backdrop-blur-md shadow-lg z-30 border-t"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onMouseEnter={() => setHoveredIndex(hoveredIndex)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onMouseLeave={() => setHoveredIndex(null)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  initial={{ opacity: 0, y: -20 }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  animate={{ opacity: 1, y: 0 }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  exit={{ opacity: 0, y: -10 }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  transition={{ duration: 0.3, ease: "easeOut" }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="w-full max-w-7xl mx-auto px-6 sm:px-8 py-6">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="grid gap-6 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 justify-items-center">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {chunkArray(menuItems[hoveredIndex].links, Math.ceil(menuItems[hoveredIndex].links.length / 4)).map((col, colIdx) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div key={colIdx} className="flex flex-col gap-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {col.map((option, idx) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <FadeInWhenVisible key={idx} delay={idx * 0.04}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <motion.div whileHover={{ y: -5 }}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  to={option.to}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setHoveredIndex(null)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="grid gap-4 rounded-md hover:bg-accent/50 p-3 transition group"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex flex-col gap-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center gap-3">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="p-2 bg-primary/10 rounded-full"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  whileHover={{ rotate: 10 }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <option.icon className="w-5 h-5 text-primary" />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </motion.div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <TypographyH4 className="group-hover:text-primary transition-colors">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {option.label}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </TypographyH4>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <TypographyMuted className="line-clamp-2 text-sm">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {option?.description}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </TypographyMuted>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="overflow-hidden rounded-md"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  whileHover={{ scale: 1.02 }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  transition={{ type: "spring", stiffness: 400 }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <img
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  src={option.image}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  alt={option.label}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="w-full h-32 object-cover"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </motion.div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </motion.div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </FadeInWhenVisible>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </motion.div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  Â  </AnimatePresence>
Â  Â  Â  Â  Â  Â  </motion.div>

Â  Â  Â  Â  Â  Â  <UserSidebar
Â  Â  Â  Â  Â  Â  Â  Â  isSidebarOpen={isSidebarOpen}
Â  Â  Â  Â  Â  Â  Â  Â  toggleSidebar={toggleSidebar}
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  </>
Â  Â  );
};

export default NavbarDesktop;